// Ch∆∞∆°ng 6: C·∫•u Tr√∫c ƒêi·ªÅu Khi·ªÉn V√≤ng L·∫∑p trong JavaScript

// 1. V√≤ng l·∫∑p `for`: In s·ªë t·ª´ 1 ƒë·∫øn 5
for (let i = 1; i <= 5; i++) console.log(i);

// 2. V√≤ng l·∫∑p `while`: L·∫∑p ƒë·∫øn khi s·ªë > 10
let num = 0;
while (num <= 10) console.log(num++);

// 3. V√≤ng l·∫∑p `do...while`: Lu√¥n ch·∫°y √≠t nh·∫•t 1 l·∫ßn
let count = 0;
do {
    console.log(count);
} while (++count <= 10);

// 4. `break` v√† `continue`
for (let i = 1; i <= 10; i++) {
    if (i === 5) break; // D·ª´ng khi i = 5
    console.log(i);
}

for (let i = 1; i <= 10; i++) {
    if (i % 2 === 0) continue; // B·ªè qua s·ªë ch·∫µn
    console.log(i);
}

// 5. L·ªìng v√≤ng l·∫∑p: B·∫£ng c·ª≠u ch∆∞∆°ng t·ª´ 1 ƒë·∫øn 5
for (let i = 1; i <= 5; i++) {
    for (let j = 1; j <= 5; j++) {
        console.log(`${i} x ${j} = ${i * j}`);
    }
}

// 6. B√†i t·∫≠p th·ª±c h√†nh
// a. In s·ªë t·ª´ 10 ƒë·∫øn 1
for (let i = 10; i >= 1; i--) console.log(i);

// b. T√≠nh t·ªïng t·ª´ 1 ƒë·∫øn 100 b·∫±ng `while`
let sum = 0, numToSum = 1;
while (numToSum <= 100) sum += numToSum++;
console.log("T·ªïng t·ª´ 1 ƒë·∫øn 100: " + sum);

// c. Duy·ªát m·∫£ng v√† in ph·∫ßn t·ª≠
let array = [1, 2, 3, 4, 5];
array.forEach((item, index) => console.log(`Ph·∫ßn t·ª≠ ${index}: ${item}`));

// üî• M√°y T√≠nh C∆° B·∫£n v·ªõi `switch-case`
function calculator() {
    let num1 = parseFloat(prompt("Nh·∫≠p s·ªë th·ª© nh·∫•t:"));
    let num2 = parseFloat(prompt("Nh·∫≠p s·ªë th·ª© hai:"));
    let operation = prompt("Ch·ªçn ph√©p to√°n (+, -, *, /):");

    switch (operation) {
        case '+': console.log(`K·∫øt qu·∫£: ${num1 + num2}`); break;
        case '-': console.log(`K·∫øt qu·∫£: ${num1 - num2}`); break;
        case '*': console.log(`K·∫øt qu·∫£: ${num1 * num2}`); break;
        case '/': console.log(num2 !== 0 ? `K·∫øt qu·∫£: ${num1 / num2}` : "Kh√¥ng th·ªÉ chia cho 0!"); break;
        default: console.log("Ph√©p to√°n kh√¥ng h·ª£p l·ªá!");
    }
}

// G·ªçi m√°y t√≠nh
calculator();
